import random
import requests
import os
import logging
from openpyxl import load_workbook
from telegram import Update, InputFile
from telegram.ext import (
    ApplicationBuilder,
    MessageHandler,
    CommandHandler,
    ContextTypes,
    filters,
)

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---
logging.basicConfig(
    format='%(asctime)s %(levelname)s %(message)s',
    level=logging.INFO
)

# --- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
ACCESS_TOKEN     = os.getenv("ACCESS_TOKEN")
MEDIA_ID         = os.getenv("MEDIA_ID")
TELEGRAM_TOKEN   = os.getenv("TELEGRAM_TOKEN")
DOWNLOAD_PASSWORD= os.getenv("DOWNLOAD_PASSWORD")

EXCEL_FILE       = "promo_codes_test.xlsx"
SHEET_NAME       = "–õ–∏—Å—Ç1"

# --- –°–æ–æ–±—â–µ–Ω–∏—è ---
START_MESSAGE = (
    "–ü—Ä–∏–≤–µ—Ç! üëã\n"
    "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥, –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ —Å–≤–æ–π Instagram-–Ω–∏–∫–Ω–µ–π–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, @yourname).\n"
)
ALREADY_GOT       = "‚ùóÔ∏è –í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥ —Ä–∞–Ω–µ–µ."
SUCCESS_TEMPLATE  = "‚úÖ –í–∞—à –ø—Ä–æ–º–æ–∫–æ–¥: *{promo_code}*"
FAIL_MESSAGE      = (
    "üòï –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–¥ –ø–æ—Å—Ç–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á—Ç–æ —Ç—ã:\n"
    "1. –ü–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ @aviashow.kz\n"
    "2. –õ–∞–π–∫–Ω—É–ª –ø–æ—Å—Ç\n"
    "3. –û—Å—Ç–∞–≤–∏–ª –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å –æ—Ç–º–µ—Ç–∫–æ–π 2 –¥—Ä—É–∑–µ–π"
)
ASK_DOWNLOAD_PASS = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞."
WRONG_PASS        = "üö´ –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å."
FILE_NOT_FOUND    = "üö´ –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ."

# --- –ü–æ–º–æ—â–Ω–∏–∫–∏ —Ä–∞–±–æ—Ç—ã —Å Excel ---
def load_promo_codes():
    wb = load_workbook(EXCEL_FILE)
    ws = wb[SHEET_NAME]
    free_codes = []
    for row in ws.iter_rows(min_row=2):
        code = row[0].value
        used = row[3].value  # –∫–æ–ª–æ–Ω–∫–∞ D (Used)
        if code and not used:
            free_codes.append((code, row[0].row))
    wb.close()
    return free_codes

def mark_code_as_used(row_number: int, username: str):
    wb = load_workbook(EXCEL_FILE)
    ws = wb[SHEET_NAME]
    ws.cell(row=row_number, column=4, value=username)  # –ø–∏—à–µ–º –≤ D
    wb.save(EXCEL_FILE)
    wb.close()

def is_user_in_table(username: str) -> bool:
    wb = load_workbook(EXCEL_FILE, read_only=True)
    ws = wb[SHEET_NAME]
    for row in ws.iter_rows(min_row=2):
        if row[3].value and row[3].value.lower() == username.lower():
            wb.close()
            return True
    wb.close()
    return False

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ Instagram ---
def has_user_commented(username: str) -> bool:
    """
    –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ª–æ–≥–∏—Ä—É–µ–º –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –≤ –ø–æ—Å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –¥–µ–±–∞–≥–∞.
    """
    url = f"https://graph.facebook.com/v22.0/{MEDIA_ID}/comments"
    params = {
        "access_token": ACCESS_TOKEN,
        "fields": "username,text",
        "limit": 100,
    }
    all_usernames = []
    while url:
        resp = requests.get(url, params=params)
        data = resp.json()
        # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ—Ö –∏–º—ë–Ω
        for c in data.get("data", []):
            u = c.get("username", "")
            all_usernames.append(u)
        url = data.get("paging", {}).get("next")

    logging.info(f"üõ† Debug ‚Äî –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —é–∑–µ—Ä—ã –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö: {all_usernames}")

    # –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–∞—à –Ω–∏–∫ —Å—Ä–µ–¥–∏ –Ω–∏—Ö
    return username.lower() in [u.lower() for u in all_usernames]

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ Telegram ---
async def handle_username(update: Update, context: ContextTypes.DEFAULT_TYPE):
    username = update.message.text.strip().lstrip("@")
    logging.info(f"–ü—Ä–æ–≤–µ—Ä—è—é –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç @{username}‚Ä¶")
    # 1. —É–∂–µ –ø–æ–ª—É—á–∞–ª?
    if is_user_in_table(username):
        await update.message.reply_text(ALREADY_GOT)
        return

    # 2. –µ—Å—Ç—å –ª–∏ –∫–æ–º–º–µ–Ω—Ç?
    if not has_user_commented(username):
        await update.message.reply_text(FAIL_MESSAGE)
        return

    # 3. –≤—ã–¥–∞—ë–º —Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–¥
    free_codes = load_promo_codes()
    if not free_codes:
        await update.message.reply_text("üòî –ü—Ä–æ–º–æ–∫–æ–¥—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.")
        return

    promo, row = random.choice(free_codes)
    mark_code_as_used(row, username)
    await update.message.reply_text(
        SUCCESS_TEMPLATE.format(promo_code=promo),
        parse_mode="Markdown"
    )

async def download_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(ASK_DOWNLOAD_PASS)
    context.user_data["awaiting_pass"] = True

async def download_check_pass(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.user_data.get("awaiting_pass"):
        return  # –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º, –µ—Å–ª–∏ –º—ã –Ω–µ –∂–¥–∞–ª–∏ –ø–∞—Ä–æ–ª—å

    context.user_data["awaiting_pass"] = False
    pw = update.message.text.strip()
    if pw != DOWNLOAD_PASSWORD:
        await update.message.reply_text(WRONG_PASS)
        return

    if not os.path.exists(EXCEL_FILE):
        await update.message.reply_text(FILE_NOT_FOUND)
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª .xlsx
    await update.message.reply_document(InputFile(EXCEL_FILE), filename="promo_codes.xlsx")

# --- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ---
def main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    # /download
    app.add_handler(CommandHandler("download", download_start))
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å
    app.add_handler(MessageHandler(
        filters.TEXT & filters.Regex(fr"^{DOWNLOAD_PASSWORD}$"),
        download_check_pass
    ))

    # –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ‚Äî —ç—Ç–æ –∏–Ω—Å—Ç–∞-–Ω–∏–∫
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_username))

    app.run_polling()

if __name__ == "__main__":
    main()
