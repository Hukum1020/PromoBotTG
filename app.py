import random
import requests
import os
from openpyxl import load_workbook
from telegram import Update, InputFile
from telegram.ext import ApplicationBuilder, MessageHandler, CommandHandler, ContextTypes, filters

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
ACCESS_TOKEN = os.getenv("ACCESS_TOKEN")
MEDIA_ID = os.getenv("MEDIA_ID")
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
DOWNLOAD_PASSWORD = os.getenv("DOWNLOAD_PASSWORD")  # –ü–∞—Ä–æ–ª—å –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞

EXCEL_FILE = 'promo_codes_test.xlsx'
SHEET_NAME = '–õ–∏—Å—Ç1'

# –°–æ–æ–±—â–µ–Ω–∏—è
START_MESSAGE = """–ü—Ä–∏–≤–µ—Ç! üëã  
–¢—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ —É—á–∞—Å—Ç–∏—é –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ VIP-–±–∏–ª–µ—Ç–æ–≤ –Ω–∞ –∞–≤–∏–∞—à–æ—É ¬´–ù–µ–±–æ –ë–∞–π—Å–µ—Ä–∫–µ ‚Äì 2025¬ª ‚úàüè± –ö–∞–∂–¥—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç –ü–û–î–ê–†–û–ö ‚Äî –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ —Å–∫–∏–¥–∫—É 10% –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –±–∏–ª–µ—Ç!
–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –≤—ã–¥–∞—Ç—å —Ç–µ–±–µ –ø—Ä–æ–º–æ–∫–æ–¥, –¥–∞–≤–∞–π –ø—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —Ç—ã –≤—ã–ø–æ–ª–Ω–∏–ª –≤—Å–µ —É—Å–ª–æ–≤–∏—è üëá"""

ASK_USERNAME = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π Instagram-–Ω–∏–∫–Ω–µ–π–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, @yourname)"

SUCCESS_MESSAGE_TEMPLATE = """\
‚úÖ –û—Ç–ª–∏—á–Ω–æ, –≤—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã:\n‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ @aviashow.kz\n‚Ä¢ –õ–∞–π–∫ –Ω–∞ –ø–æ—Å—Ç —Å —Ä–æ–∑—ã–≥—Ä—ã—à–µ–º\n‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å –æ—Ç–º–µ—Ç–∫–æ–π –¥–≤—É—Ö –¥—Ä—É–∑–µ–π\n
üè± –í–æ—Ç —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥: *{promo_code}*\n\n–ò—Å–ø–æ–ª—å–∑—É–π –µ–≥–æ –Ω–∞ [ticketon.kz](https://ticketon.kz) –∏ –ø–æ–ª—É—á–∏ —Å–∫–∏–¥–∫—É!\n"""

FAIL_MESSAGE = """\
üòï –¢—ã –µ—â—ë –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª –≤—Å–µ —É—Å–ª–æ–≤–∏—è.\nüîÑ –ö–æ–≥–¥–∞ –≤—Å–µ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –Ω–∏–∫ –µ—â—ë —Ä–∞–∑!"""

ASK_PASSWORD_MESSAGE = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –ø–∞—Ä–æ–ª—å –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞."
WRONG_PASSWORD_MESSAGE = "üõë –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
FILE_NOT_FOUND_MESSAGE = "üõë –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω."

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –ø–æ–º–µ—Ç–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤

def load_promo_codes():
    wb = load_workbook(EXCEL_FILE)
    ws = wb[SHEET_NAME]
    codes = []
    for row in ws.iter_rows(min_row=2, values_only=False):
        code_cell, used_cell = row[0], row[3]
        if code_cell.value and (used_cell.value is None or used_cell.value == ''):
            codes.append((code_cell.value, used_cell.row))
    wb.close()
    return codes

def mark_code_as_used(row_number, username):
    wb = load_workbook(EXCEL_FILE)
    ws = wb[SHEET_NAME]
    ws.cell(row=row_number, column=4, value=username)
    wb.save(EXCEL_FILE)
    wb.close()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤

def has_user_commented(username):
    url = f"https://graph.facebook.com/v19.0/{MEDIA_ID}/comments"
    params = {
        'access_token': ACCESS_TOKEN,
        'fields': 'username,text',
        'limit': 100
    }
    while url:
        response = requests.get(url, params=params)
        data = response.json()
        for comment in data.get('data', []):
            if comment['username'].lower() == username.lower():
                return True
        url = data.get('paging', {}).get('next')
    return False

# –ë–æ—Ç

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.user_data.get("started"):
        await update.message.reply_text(START_MESSAGE)
        await update.message.reply_text(ASK_USERNAME)
        context.user_data["started"] = True
        return

    username = update.message.text.strip().lstrip('@')
    await update.message.reply_text(f"üîç –ü—Ä–æ–≤–µ—Ä—è—é @{username}...")

    if has_user_commented(username):
        promo_codes = load_promo_codes()
        if promo_codes:
            selected_code, row_number = random.choice(promo_codes)
            mark_code_as_used(row_number, username)
            await update.message.reply_text(
                SUCCESS_MESSAGE_TEMPLATE.format(promo_code=selected_code),
                parse_mode='Markdown'
            )
        else:
            await update.message.reply_text("üòû –ü—Ä–æ–º–æ–∫–æ–¥—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.")
    else:
        await update.message.reply_text(FAIL_MESSAGE)

async def download_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(ASK_PASSWORD_MESSAGE)
    context.user_data['awaiting_password'] = True

async def check_password(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if context.user_data.get('awaiting_password'):
        password = update.message.text.strip()
        if password == DOWNLOAD_PASSWORD:
            if os.path.exists(EXCEL_FILE):
                with open(EXCEL_FILE, 'rb') as file:
                    await update.message.reply_document(InputFile(file, filename="promo_codes.xlsx"))
            else:
                await update.message.reply_text(FILE_NOT_FOUND_MESSAGE)
        else:
            await update.message.reply_text(WRONG_PASSWORD_MESSAGE)
        context.user_data['awaiting_password'] = False

# –ó–∞–ø—É—Å–∫

def run_bot():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    app.add_handler(CommandHandler("download", download_command))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, check_password))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    app.run_polling()

if __name__ == '__main__':
    run_bot()
