import random
import requests
import os
from openpyxl import load_workbook
from telegram import Update, InputFile
from telegram.ext import (
    ApplicationBuilder,
    MessageHandler,
    CommandHandler,
    ContextTypes,
    filters,
)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
ACCESS_TOKEN      = os.getenv("ACCESS_TOKEN")
MEDIA_ID          = os.getenv("MEDIA_ID")
TELEGRAM_TOKEN    = os.getenv("TELEGRAM_TOKEN")
DOWNLOAD_PASSWORD = os.getenv("DOWNLOAD_PASSWORD")

EXCEL_FILE = 'promo_codes_test.xlsx'
SHEET_NAME = '–õ–∏—Å—Ç1'

# –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã
START_MESSAGE = """–ü—Ä–∏–≤–µ—Ç! üëã  
–¢—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ —É—á–∞—Å—Ç–∏—é –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ VIP-–±–∏–ª–µ—Ç–æ–≤ –Ω–∞ –∞–≤–∏–∞—à–æ—É ¬´–ù–µ–±–æ –ë–∞–π—Å–µ—Ä–∫–µ ‚Äì 2025¬ª ‚úàüéÅ –ö–∞–∂–¥—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç –ü–û–î–ê–†–û–ö ‚Äî –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ —Å–∫–∏–¥–∫—É 10% –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –±–∏–ª–µ—Ç!
–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –≤—ã–¥–∞—Ç—å —Ç–µ–±–µ –ø—Ä–æ–º–æ–∫–æ–¥, –¥–∞–≤–∞–π –ø—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —Ç—ã –≤—ã–ø–æ–ª–Ω–∏–ª –≤—Å–µ —É—Å–ª–æ–≤–∏—è üëá"""

ASK_USERNAME = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π Instagram-–Ω–∏–∫–Ω–µ–π–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, @yourname)"

SUCCESS_MESSAGE_TEMPLATE = """‚úÖ –û—Ç–ª–∏—á–Ω–æ, –≤—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã:
‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ @aviashow.kz  
‚Ä¢ –õ–∞–π–∫ –Ω–∞ –ø–æ—Å—Ç —Å —Ä–æ–∑—ã–≥—Ä—ã—à–µ–º  
‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å –æ—Ç–º–µ—Ç–∫–æ–π –¥–≤—É—Ö –¥—Ä—É–∑–µ–π
üéÅ –í–æ—Ç —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥: *{promo_code}*

üí° –ò—Å–ø–æ–ª—å–∑—É–π –µ–≥–æ –Ω–∞ [ticketon.kz](https://ticketon.kz) –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –±–∏–ª–µ—Ç–∞ –∏ –ø–æ–ª—É—á–∏ —Å–∫–∏–¥–∫—É:
- –¥–æ 31 –º–∞—è ‚Äî 3000 ‚Ç∏  
- —Å 1 –∏—é–Ω—è –ø–æ 31 –∏—é–ª—è ‚Äî 4000 ‚Ç∏  
- —Å 1 –ø–æ 17 –∞–≤–≥—É—Å—Ç–∞ ‚Äî 5000 ‚Ç∏

–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ –∏ —É–¥–∞—á–∏ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ! –ò—Ç–æ–≥–∏ ‚Äî 1 –∏—é–Ω—è!
"""

FAIL_MESSAGE = """üòï –¢—ã –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª –≤—Å–µ —É—Å–ª–æ–≤–∏—è.  
–ü—Ä–æ–≤–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞:
1. –ü–æ–¥–ø–∏—Å–∞–Ω –ª–∏ —Ç—ã –Ω–∞ @aviashow.kz  
2. –õ–∞–π–∫–Ω—É–ª –ª–∏ –ø–æ—Å—Ç —Å —Ä–æ–∑—ã–≥—Ä—ã—à–µ–º  
3. –û—Ç–º–µ—Ç–∏–ª 2 –¥—Ä—É–∑–µ–π –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ–¥ –ø–æ—Å—Ç–æ–º

üîÅ –ö–æ–≥–¥–∞ –≤—Å—ë –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ ‚Äî –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π –Ω–∏–∫ —Å–Ω–æ–≤–∞. –Ø –ø—Ä–æ–≤–µ—Ä—é –µ—â—ë —Ä–∞–∑!
"""

ASK_PASS     = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –ø–∞—Ä–æ–ª—å –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞."
WRONG_PASS   = "üö´ –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑."
FILE_MISSING = "üö´ –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω."

# --- –†–∞–±–æ—Ç–∞ —Å Excel ---
def load_workbook_data():
    wb = load_workbook(EXCEL_FILE)
    ws = wb[SHEET_NAME]
    rows = list(ws.iter_rows(min_row=2, values_only=False))
    wb.close()
    return rows

def find_unused_codes():
    rows = load_workbook_data()
    return [
        (r[0].value, r[0].row)
        for r in rows
        if r[0].value and not r[3].value
    ]

def user_already_got(username):
    rows = load_workbook_data()
    return any(
        r[3].value and r[3].value.lower() == username.lower()
        for r in rows
    )

def mark_code(row, user):
    wb = load_workbook(EXCEL_FILE)
    ws = wb[SHEET_NAME]
    ws.cell(row=row, column=4, value=user)
    wb.save(EXCEL_FILE)
    wb.close()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
def has_commented(username):
    url = f"https://graph.facebook.com/v19.0/{MEDIA_ID}/comments"
    params = {
        'access_token': ACCESS_TOKEN,
        'fields': 'username,text',
        'limit': 100,
    }
    while url:
        resp = requests.get(url, params=params).json()
        for c in resp.get("data", []):
            if c['username'].lower() == username.lower():
                return True
        url = resp.get("paging", {}).get("next")
    return False

# --- –•–µ–Ω–¥–ª–µ—Ä—ã ---

# /start
async def start_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data.clear()
    await update.message.reply_text(START_MESSAGE)
    await update.message.reply_text(ASK_USERNAME)

# –≤—ã–¥–∞—á–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –µ—Å–ª–∏ –∂–¥—ë–º –ø–∞—Ä–æ–ª—å ‚Äî –≤—ã—Ö–æ–¥–∏–º, —ç—Ç–æ –Ω–µ —ç—Ç–æ—Ç —Ö–µ–Ω–¥–ª–µ—Ä
    if context.user_data.get('awaiting_password'):
        return

    username = update.message.text.strip().lstrip('@')

    # —É–∂–µ –ø–æ–ª—É—á–∞–ª?
    if user_already_got(username):
        await update.message.reply_text("üéâ –í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥.")
        return

    await update.message.reply_text(f"–ü—Ä–æ–≤–µ—Ä—è—é –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç @{username}‚Ä¶")
    if not has_commented(username):
        await update.message.reply_text(FAIL_MESSAGE)
        return

    codes = find_unused_codes()
    if not codes:
        await update.message.reply_text("üòî –ü—Ä–æ–º–æ–∫–æ–¥—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.")
        return

    code, row = random.choice(codes)
    mark_code(row, username)
    await update.message.reply_text(
        SUCCESS_MESSAGE_TEMPLATE.format(promo_code=code),
        parse_mode='Markdown'
    )

# /download ‚Üí –∂–¥–µ–º –ø–∞—Ä–æ–ª—å
async def download_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(ASK_PASS)
    context.user_data['awaiting_password'] = True

# –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞
async def check_password(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.user_data.get('awaiting_password'):
        return
    if update.message.text.strip() == DOWNLOAD_PASSWORD:
        if os.path.exists(EXCEL_FILE):
            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–º–µ–Ω–Ω–æ .xlsx
            await update.message.reply_document(
                InputFile(EXCEL_FILE, filename="promo_codes.xlsx")
            )
        else:
            await update.message.reply_text(FILE_MISSING)
    else:
        await update.message.reply_text(WRONG_PASS)
    context.user_data['awaiting_password'] = False

def main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    app.add_handler(CommandHandler("start",    start_cmd))
    app.add_handler(CommandHandler("download", download_cmd))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, check_password))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    app.run_polling()

if __name__ == '__main__':
    main()
