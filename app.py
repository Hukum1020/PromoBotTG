import random
import requests
import os
from openpyxl import load_workbook
from telegram import Update, InputFile, Bot
from telegram.ext import (
    ApplicationBuilder,
    MessageHandler,
    CommandHandler,
    ContextTypes,
    filters,
)

# --- –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ —Å—Ä–µ–¥—ã ---
ACCESS_TOKEN       = os.getenv("ACCESS_TOKEN")
MEDIA_ID           = os.getenv("MEDIA_ID")
TELEGRAM_TOKEN     = os.getenv("TELEGRAM_TOKEN")
DOWNLOAD_PASSWORD  = os.getenv("DOWNLOAD_PASSWORD")

EXCEL_FILE = "promo_codes_test.xlsx"
SHEET_NAME = "–õ–∏—Å—Ç1"

# --- —Ç–µ–∫—Å—Ç—ã ---
START_MESSAGE = """–ü—Ä–∏–≤–µ—Ç! üëã  
–ù–∞–ø–∏—à–∏ —Å–≤–æ–π Instagram-–Ω–∏–∫–Ω–µ–π–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, @yourname), –∏ —è –ø—Ä–æ–≤–µ—Ä—é, –æ—Å—Ç–∞–≤–∏–ª –ª–∏ —Ç—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–¥ –Ω–∞—à–∏–º —Ä–æ–∑—ã–≥—Ä—ã—à–µ–º."""
ALREADY_GOT = "‚ùóÔ∏è –í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥ —Ä–∞–Ω–µ–µ: *{promo_code}*"
SUCCESS_MESSAGE = """‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í–æ—Ç —Ç–≤–æ–π –ø—Ä–æ–º–æ–∫–æ–¥: *{promo_code}*"""
FAIL_MESSAGE = """üòï –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–¥ –ø–æ—Å—Ç–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á—Ç–æ —Ç—ã:
1. –ü–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ @aviashow.kz  
2. –õ–∞–π–∫–Ω—É–ª –ø–æ—Å—Ç  
3. –û—Å—Ç–∞–≤–∏–ª –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å –æ—Ç–º–µ—Ç–∫–æ–π 2 –¥—Ä—É–∑–µ–π"""
ASK_PASSWORD = "üîí –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞."
WRONG_PASSWORD = "üö´ –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å."
FILE_NOT_FOUND = "üö´ –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω."

# --- —Ä–∞–±–æ—Ç–∞ —Å Excel ---
def load_promo_data():
    wb = load_workbook(EXCEL_FILE)
    ws = wb[SHEET_NAME]
    records = []
    for row in ws.iter_rows(min_row=2, values_only=False):
        code_cell = row[0]
        used_cell = row[3]
        records.append({
            "code": code_cell.value,
            "used": used_cell.value,
            "row": code_cell.row
        })
    wb.close()
    return records

def save_used(row: int, username: str):
    wb = load_workbook(EXCEL_FILE)
    ws = wb[SHEET_NAME]
    ws.cell(row=row, column=4, value=username)
    wb.save(EXCEL_FILE)
    wb.close()

# --- –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –≤ Instagram ---
def has_commented(username: str) -> bool:
    url = f"https://graph.facebook.com/v19.0/{MEDIA_ID}/comments"
    params = {
        "access_token": ACCESS_TOKEN,
        "fields": "username,text",
        "limit": 100
    }
    while url:
        r = requests.get(url, params=params).json()
        for c in r.get("data", []):
            if c["username"].lower() == username.lower():
                return True
        url = r.get("paging", {}).get("next")
    return False

# --- –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ---
async def cmd_download(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["awaiting_password"] = True
    await update.message.reply_text(ASK_PASSWORD)

async def text_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip()

    # 1) –°–µ–π—á–∞—Å –∂–¥—ë–º –ø–∞—Ä–æ–ª—å?
    if context.user_data.get("awaiting_password"):
        context.user_data["awaiting_password"] = False
        if text == DOWNLOAD_PASSWORD:
            if os.path.exists(EXCEL_FILE):
                await update.message.reply_document(InputFile(EXCEL_FILE, filename="promo_codes.xlsx"))
            else:
                await update.message.reply_text(FILE_NOT_FOUND)
        else:
            await update.message.reply_text(WRONG_PASSWORD)
        return

    # 2) –ò–Ω–∞—á–µ ‚Äî —ç—Ç–æ –Ω–∏–∫–Ω–µ–π–º –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞.
    username = text.lstrip("@")
    await update.message.reply_text(f"üîç –ü—Ä–æ–≤–µ—Ä—è—é –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç @{username}‚Ä¶")

    # —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—Ä–∞–ª –ª–∏ –æ–Ω —É–∂–µ
    data = load_promo_data()
    for rec in data:
        if rec["used"] and rec["used"].lower() == username.lower():
            # –Ω–∞—à–ª–∏ –≤ –∫–æ–ª–æ–Ω–∫–µ used
            await update.message.reply_text(ALREADY_GOT.format(promo_code=rec["code"]), parse_mode="Markdown")
            return

    # –µ—Å–ª–∏ –Ω–µ –±—Ä–∞–ª–∏, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ –∏–Ω—Å—Ç–µ
    if not has_commented(username):
        await update.message.reply_text(FAIL_MESSAGE)
        return

    # –≤—ã–¥–∞—ë–º —Å–ª—É—á–∞–π–Ω—ã–π —Å–≤–æ–±–æ–¥–Ω—ã–π –∫–æ–¥
    free = [r for r in data if not r["used"]]
    if not free:
        await update.message.reply_text("üòî –ü—Ä–æ–º–æ–∫–æ–¥—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.")
        return

    rec = random.choice(free)
    save_used(rec["row"], username)
    await update.message.reply_text(SUCCESS_MESSAGE.format(promo_code=rec["code"]), parse_mode="Markdown")

def run_bot():
    # —á–∏—Å—Ç–∏–º –≤–æ–∑–º–æ–∂–Ω—ã–π —Å—Ç–∞—Ä—ã–π webhook
    bot = Bot(token=TELEGRAM_TOKEN)
    bot.delete_webhook(drop_pending_updates=True)

    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("download", cmd_download))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, text_handler))
    app.run_polling()

if __name__ == "__main__":
    run_bot()
